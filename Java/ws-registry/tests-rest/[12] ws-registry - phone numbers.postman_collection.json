{
	"info": {
		"_postman_id": "ed714bbc-82e2-4510-9102-3391963405ee",
		"name": "[12] ws-registry - phone numbers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SuccessRequests",
			"item": [
				{
					"name": "findAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57bfcf25-6e8c-45c0-ab0a-8eb27a34aba4",
								"exec": [
									"//parse response",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Size bigger than 0\", function () {",
									"    pm.expect(jsonData.content.length).to.gt(0);",
									"});",
									"",
									"// update test variables",
									"pm.environment.set( \"phoneId\", jsonData.content[0].phoneId );",
									"pm.environment.set( \"phoneNumber\", jsonData.content[0].number );",
									"pm.environment.set( \"personId\", jsonData.content[0].personId );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "findAllByPhoneNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "57bfcf25-6e8c-45c0-ab0a-8eb27a34aba4",
								"exec": [
									"//parse response",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Size bigger than 0\", function () {",
									"    pm.expect(jsonData.content.length).to.gt(0);",
									"});",
									"",
									"pm.test(\"PhoneNumber OK\", function () {",
									"    let content = jsonData.content;",
									"    for ( let i= 0; i < content.length; i++ ) {",
									"        pm.expect(content[i].number).to.include( pm.environment.get(\"phoneNumber\") );",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/?phoneNumber={{phoneNumber}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							],
							"query": [
								{
									"key": "phoneNumber",
									"value": "{{phoneNumber}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "findAllPaging",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de773c4c-acc7-4cb4-9586-efa1f0c928c6",
								"exec": [
									"//parse response",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Size bigger than 0\", function () {",
									"    pm.expect(jsonData.content.length).to.gt(0);",
									"});",
									"",
									"pm.test(\"Size equals to 10\", function () {",
									"    pm.expect(jsonData.content.length).to.eq(10);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/?page=1&size=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "findOne",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c14f9d6-dffc-455d-b3cb-72c05ca994f9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5936bd2-eb59-4cda-bfce-0693bb66e04a",
								"exec": [
									"//parse response",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"PhoneNumber OK\", function () {",
									"    pm.expect(jsonData.number).to.eq( pm.environment.get( \"phoneNumber\" ) );",
									"});",
									"",
									"pm.test(\"PersonId OK\", function () {",
									"    pm.expect(jsonData.personId).to.eq( pm.environment.get( \"personId\" ) );",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/{{phoneId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								"{{phoneId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8dc6b244-562b-4e5a-9eb4-1ff0cb80b02d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "314b5df2-c02f-4e86-a2c7-63bb8c9185ed",
						"type": "text/javascript",
						"exec": [
							"// test of status",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "CRUDRequests",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"New PhoneId created\", function () {",
									"    pm.expect(jsonData.phoneId).to.gt(0);",
									"});",
									"pm.test(\"Number OK\", function () {",
									"    pm.expect(jsonData.number).to.eq(\"99886565\");",
									"});",
									"pm.test(\"PersonId OK\", function () {",
									"    pm.expect(jsonData.personId).to.eq(pm.environment.get(\"personId\"));",
									"});",
									"",
									"// update test variables",
									"pm.environment.set( \"phoneIdToDelete\", jsonData.phoneId );"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e7771b92-0300-426f-9615-3d7efb4b8ba0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 1\n\t},\n\t\"number\": \"99886565\",\n\t\"ddd\": \"51\",\n\t\"ddi\": \"55\",\n\t\"personId\": {{personId}}\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Phone Number udpated\", function () {",
									"    pm.expect(jsonData.number).to.eq(\"99996565\");",
									"});",
									"",
									"pm.test(\"DDIr udpated\", function () {",
									"    pm.expect(jsonData.ddi).to.eq(\"55\");",
									"});",
									"",
									"pm.test(\"Phone Type udpated\", function () {",
									"    pm.expect(jsonData.phoneType.phoneTypeId).to.eq(2);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ae8cb6b6-f8b9-4c6b-943d-9d3e21f39a02",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : {{phoneIdToDelete}},\n\t\"personId\" : {{personId}},\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 2\n\t},\n\t\"number\": \"99996565\",\n\t\"ddd\": \"51\"\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : {{phoneIdToDelete}}\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7cdb7c10-9a9a-4a16-bdb9-7cd1035d1d8a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4f81680c-b3ec-4823-883d-96fdfc6cb123",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ErrorRequests",
			"item": [
				{
					"name": "findOneInvalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5c14f9d6-dffc-455d-b3cb-72c05ca994f9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d5936bd2-eb59-4cda-bfce-0693bb66e04a",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/-1",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "createInvalidPersonId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 1\n\t},\n\t\"number\": \"99886565\",\n\t\"ddd\": \"51\",\n\t\"personId\" : -1\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "createWithoutPersonId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Error message confirmed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"PersonId não pode ser nulo.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 1\n\t},\n\t\"number\": \"99886565\",\n\t\"ddd\": \"51\"\n}\n"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "createWithoutNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Error message confirmed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Número do telefone não pode ser nulo.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 1\n\t},\n\t\"ddd\": \"51\",\n\t\"personId\": {{personId}}\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "updateInvalidId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : -1,\n\t\"personId\" : {{personId}},\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 2\n\t},\n\t\"number\": \"99996565\",\n\t\"ddd\": \"51\",\n\t\"ddi\": \"55\"\n}\n"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "updateInvalidPersonId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : {{phoneId}},\n\t\"personId\" : -1,\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 2\n\t},\n\t\"number\": \"99996565\",\n\t\"ddd\": \"51\",\n\t\"ddi\": \"55\"\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "updateWithoutPersonId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Error message confirmed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"PersonId não pode ser nulo.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : -1,\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 2\n\t},\n\t\"number\": \"99996565\",\n\t\"ddd\": \"51\",\n\t\"ddi\": \"55\"\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "updateWithoutNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Error message confirmed\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Número do telefone não pode ser nulo.\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : -1,\n\t\"personId\" : {{personId}},\n\t\"phoneType\": {\n\t\t\"phoneTypeId\": 2\n\t},\n\t\"ddd\": \"51\",\n\t\"ddi\": \"55\"\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteInvalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56f294d5-3b83-4a4f-8a4b-4262395d1034",
								"exec": [
									"// test of status",
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"phoneId\" : -1\n}"
						},
						"url": {
							"raw": "{{url}}/ws-registry/person/phone/",
							"host": [
								"{{url}}"
							],
							"path": [
								"ws-registry",
								"person",
								"phone",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "58b4bb74-96d4-4b28-9e26-36e33b16e28a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "22f68cd9-69be-45b2-811a-833f442315ca",
				"type": "text/javascript",
				"exec": [
					"// simple tests of speed",
					"pm.test(\"Response time is less than 400ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(400);",
					"});",
					""
				]
			}
		}
	]
}